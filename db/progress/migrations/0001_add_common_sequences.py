from gearbox.migrations import Migration

class AddSequences(Migration):

    database = "common"

    def up(self):
        self.sequence('temp-file', initial=0, min_val=0, max_val=999999, cycle_on_limit="yes", increment=1)
        self.sequence('irid', initial=0, min_val=0, cycle_on_limit="yes", increment=1)
        self.sequence('PriceId', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('bi-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('leima', initial=0, min_val=0, max_val=2000000000, cycle_on_limit="yes", increment=1)
        self.sequence('numero', initial=1000000000, min_val=1000000000, max_val=2000000000, cycle_on_limit="yes", increment=1)
        self.sequence('ci-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('cinvseq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ClaimBatch', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('co-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ft-seq', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('invseq', initial=1, min_val=1, max_val=999999999, cycle_on_limit="no", increment=1)
        self.sequence('PNPSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('mc-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('mobuser', initial=1, min_val=1, max_val=99999999, cycle_on_limit="no", increment=1)
        self.sequence('rid-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ro-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('sa-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('simbatch', initial=0, min_val=0, max_val=999999999, cycle_on_limit="no", increment=1)
        self.sequence('sofile', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('sogbatch', initial=0, min_val=0, max_val=99999999, cycle_on_limit="yes", increment=1)
        self.sequence('solog', initial=0, min_val=0, max_val=999999999, cycle_on_limit="no", increment=2)
        self.sequence('t-imno-seq', initial=10000, min_val=10000, cycle_on_limit="no", increment=1)
        self.sequence('tariff', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('tr-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ftseq', initial=1, min_val=1, max_val=999999999, cycle_on_limit="no", increment=1)
        self.sequence('citem', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('contract', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('invfile', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('chpar-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('dpseq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('genkey', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('MemoSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('PaymVouch', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('cpp-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('it-seq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('DpConfNum', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('UrSeq', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('caseq', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('CommSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('CoRule', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('CallLimit', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ContractID', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('PPlan', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('imsi', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('simfile', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ConID', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('CTServEl', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('MsRequest', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('M2MRequest', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('M2MSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('AccessSchemaSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('AccessSchemaRuleSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('OrderFunction', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('IntInvNum', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('PPInvSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('Matrix', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('RerateSeq', initial=1, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('CounterSeq', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('PerContractID', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('MNPOperSeq', initial=1, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('MNPXMLSeq', initial=1, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('QResultRowID', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('MServiceLimit', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('DumpLog', initial=1, min_val=1, cycle_on_limit="no", increment=1)
        self.sequence('InvoiceTargetID', initial=0, min_val=0, cycle_on_limit="no", increment=1)
        self.sequence('ITGroupID', initial=0, min_val=0, cycle_on_limit="no", increment=1)

    def down(self):
        self.drop_sequence('ITGroupID')
        self.drop_sequence('InvoiceTargetID')
        self.drop_sequence('DumpLog')
        self.drop_sequence('MServiceLimit')
        self.drop_sequence('QResultRowID')
        self.drop_sequence('MNPXMLSeq')
        self.drop_sequence('MNPOperSeq')
        self.drop_sequence('PerContractID')
        self.drop_sequence('CounterSeq')
        self.drop_sequence('RerateSeq')
        self.drop_sequence('Matrix')
        self.drop_sequence('PPInvSeq')
        self.drop_sequence('IntInvNum')
        self.drop_sequence('OrderFunction')
        self.drop_sequence('AccessSchemaRuleSeq')
        self.drop_sequence('AccessSchemaSeq')
        self.drop_sequence('M2MSeq')
        self.drop_sequence('M2MRequest')
        self.drop_sequence('MsRequest')
        self.drop_sequence('CTServEl')
        self.drop_sequence('ConID')
        self.drop_sequence('simfile')
        self.drop_sequence('imsi')
        self.drop_sequence('PPlan')
        self.drop_sequence('ContractID')
        self.drop_sequence('CallLimit')
        self.drop_sequence('CoRule')
        self.drop_sequence('CommSeq')
        self.drop_sequence('caseq')
        self.drop_sequence('UrSeq')
        self.drop_sequence('DpConfNum')
        self.drop_sequence('it-seq')
        self.drop_sequence('cpp-seq')
        self.drop_sequence('PaymVouch')
        self.drop_sequence('MemoSeq')
        self.drop_sequence('genkey')
        self.drop_sequence('dpseq')
        self.drop_sequence('chpar-seq')
        self.drop_sequence('invfile')
        self.drop_sequence('contract')
        self.drop_sequence('citem')
        self.drop_sequence('ftseq')
        self.drop_sequence('tr-seq')
        self.drop_sequence('tariff')
        self.drop_sequence('t-imno-seq')
        self.drop_sequence('solog')
        self.drop_sequence('sogbatch')
        self.drop_sequence('sofile')
        self.drop_sequence('simbatch')
        self.drop_sequence('sa-seq')
        self.drop_sequence('ro-seq')
        self.drop_sequence('rid-seq')
        self.drop_sequence('mobuser')
        self.drop_sequence('mc-seq')
        self.drop_sequence('PNPSeq')
        self.drop_sequence('invseq')
        self.drop_sequence('ft-seq')
        self.drop_sequence('co-seq')
        self.drop_sequence('ClaimBatch')
        self.drop_sequence('cinvseq')
        self.drop_sequence('ci-seq')
        self.drop_sequence('numero')
        self.drop_sequence('leima')
        self.drop_sequence('bi-seq')
        self.drop_sequence('PriceId')
        self.drop_sequence('irid')
        self.drop_sequence('temp-file')
